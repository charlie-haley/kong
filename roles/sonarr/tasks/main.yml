***REMOVED***
- name: Ensure the kong Namespace exists.
  community.kubernetes.k8s:
    api_version: v1
    kind: Namespace
    name: kong
    state: present

- name: Add bitnami chart repo
  community.kubernetes.helm_repository:
    name: bitnami
    repo_url: "https://charts.bitnami.com/bitnami"

- name: Add kong chart repo
  community.kubernetes.helm_repository:
    name: kong
    repo_url: "https://charts.konghq.com"

- name: Deploy postgres
  community.kubernetes.helm:
    name: kongdb
    chart_ref: bitnami/postgresql
    release_namespace: kong
    update_repo_cache: true
    values:
      global:
      image:
        registry: docker.io
        repository: bitnami/postgresql
        tag: 11.10.0-debian-10-r52
        pullPolicy: IfNotPresent
      postgresqlPostgresPassword: kong
      postgresqlUsername: kong
      postgresqlPassword: kong
      ## PostgreSQL password using existing secret
      ## existingSecret: secret
      postgresqlDatabase: kong

- name: Deploy control plane node
  community.kubernetes.helm:
    name: control
    chart_ref: kong/kong
    release_namespace: kong
    update_repo_cache: true
    values:
      ingressController:
        enabled: false
        installCRDs: false
      secretVolumes:
      - kong-cluster-cert
      env:
        database: postgres
        role: control_plane
        cluster_cert: /etc/secrets/kong-cluster-cert/tls.crt
        cluster_cert_key: /etc/secrets/kong-cluster-cert/tls.key
        pg_host: postgresql-postgresql
        pg_port: 5432
        pg_user: kong
        pg_password: kong
        pg_database: kong
      image:
        repository: kong
        tag: "2.2"
        pullPolicy: IfNotPresent
      admin:
        enabled: true
        type: NodePort
        http:
          enabled: true
          servicePort: 8001
          containerPort: 8001
      postgresql:
        enabled: false
      cluster:
        enabled: true
        tls:
          enabled: true
          servicePort: 8005
          containerPort: 8005
      proxy:
        enabled: false
      nodeSelector:
        kubernetes.io/arch: amd64
      serviceMonitor:
        enabled: true
        namespace: monitoring


- name: Deploy data plane node
  community.kubernetes.helm:
    name: data
    chart_ref: kong/kong
    release_namespace: kong
    update_repo_cache: true
    values:
      ingressController:
        enabled: false
        installCRDs: false
      secretVolumes:
      - kong-cluster-cert
      env:
        database: postgres
        role: data_plane
        cluster_cert: /etc/secrets/kong-cluster-cert/tls.crt
        cluster_cert_key: /etc/secrets/kong-cluster-cert/tls.key
        lua_ssl_trusted_certificate: /etc/secrets/kong-cluster-cert/tls.crt
        cluster_control_plane: control-kong-cluster.kong.svc.cluster.local:8005
        pg_host: postgresql-postgresql
        pg_port: 5432
        pg_user: kong
        pg_password: kong
        pg_database: kong
      image:
        repository: kong
        tag: "2.2"
        pullPolicy: IfNotPresent
      admin:
        enabled: false
      postgresql:
        enabled: false
      manager:
        enabled: false
      proxy:
        enabled: false
      nodeSelector:
        kubernetes.io/arch: amd64
      serviceMonitor:
        enabled: true
        namespace: monitoring